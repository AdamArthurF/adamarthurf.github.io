{"version":3,"sources":["img/thumbs/naruto2.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","React","lazy","Portfolio","Contact","App","Fragment","AppNavbar","Component","useState","isOpen","setIsOpen","Navbar","color","dark","fixed","expand","className","Container","fluid","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","target","NavbarText","version","Button","AppHeader","props","state","name","target1","target2","target3","Jumbotron","src","naruto","alt","this","AppMain","fallback","Spinner","type","style","width","height","AppFooter","Row","Col","lg","Date","getFullYear","Clock","date","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","AppRouter","path","component","exact","propTypes","light","PropTypes","bool","string","role","oneOfType","tag","func","noGutters","form","xs","number","sm","md","xl","stringOrNumberProp","columnProps","shape","size","order","offset","widths","array","Alert","closeClassName","toggle","fade","transition","Fade","Modal","autoFocus","centered","labelledBy","keyboard","backdrop","oneOf","scrollable","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","cssModule","object","zIndex","backdropTransition","modalTransition","innerRef","unmountOnClose","returnFocusAfterClose","children","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","basename","process","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85306f4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/naruto2.54ee10cf.jpg\";","/*\n * Copyright (c) 2020. Adam Arthur Faizal.\n */\n\nimport React, {Component, Suspense, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport naruto from './img/thumbs/naruto2.jpg';\nimport {Route, Switch} from \"react-router-dom\";\nimport {\n    Alert,\n    Button, Col,\n    Collapse, Container, Fade,\n    Jumbotron, Modal,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarText,\n    NavbarToggler,\n    NavItem,\n    NavLink, Row, Spinner\n} from \"reactstrap\";\nconst About = React.lazy(() => import('./component/About'));\nconst Portfolio = React.lazy(() => import('./component/Portfolio'));\nconst Contact = React.lazy(() => import('./component/Contact'));\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                {/*  Navbar  */}\n                <AppNavbar/>\n                {/*  Akhir dari Navbar  */}\n                <AppHeader/>\n                <AppMain/>\n                {/*  Footer  */}\n                <AppFooter/>\n                 {/*  Akhir dari footer  */}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction AppNavbar(){\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <React.Fragment>\n            <Navbar color=\"info\" dark fixed=\"top\" expand=\"md\" className=\"text-center\">\n                <Container className=\"themed-container\" fluid={true}>\n                    <NavbarBrand href=\"/\" className=\"font-weight-bold\">Adam</NavbarBrand>\n                    <NavbarToggler onClick={toggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"#home\">Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"#about\">About</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"#portfolio\">Portfolio</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"#contact\">Contact</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/AdamArthurF\" className=\"active\" target=\"_blank\">GitHub</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <NavbarText>React JS version : {React.version}</NavbarText>\n                    </Collapse>\n                </Container>\n            </Navbar>\n            <p className=\"live-clock\"><Button><Clock/></Button></p>\n        </React.Fragment>\n    )\n}\n\nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: 'Adam Arthur Faizal',\n            target1: 'Web Developer',\n            target2: 'Mobile App Developer',\n            target3: 'Cyber Security'\n        }\n    }\n\n    render() {\n        return (\n            <header>\n                {/*  Jumbotron  */}\n                <Jumbotron className=\"text-center\">\n                    <img src={naruto} alt=\"Adam\" className=\"rounded-circle\"/>\n                    <h1>{this.state.name}</h1>\n                    <p>\n                        <Button color=\"info\">{this.state.target1}</Button>{' '}\n                        <Button color=\"info\">{this.state.target2}</Button>{' '}\n                        <Button color=\"info\">{this.state.target3}</Button>\n                    </p>\n                </Jumbotron>\n                {/*  Akhir dari Jumbotron  */}\n            </header>\n        )\n    }\n}\n\nclass AppMain extends Component {\n    render() {\n        return (\n            <main>\n                <Suspense fallback={\n                    <div className=\"text-center\">\n                        <Spinner className=\"mt-5 mb-5\" type=\"grow\" style={{ width: '3rem', height: '3rem' }} color=\"info\"/>\n                    </div>\n                }>\n                    {/*  About  */}\n                    <About/>\n                    {/* Akhir dari About  */}\n                    {/*  Portofolio  */}\n                    <Portfolio/>\n                    {/*  Akhir dari Portofolio  */}\n                    {/*  Contact  */}\n                    <Contact/>\n                    {/*  Akhir dari contact  */}\n                </Suspense>\n            </main>\n        )\n    }\n}\n\nclass AppFooter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: 'Adam Arthur Faizal',\n        }\n    }\n    render() {\n        return (\n            <footer>\n                <Container className=\"themed-container text-center bg-dark\" fluid={true}>\n                    <Row>\n                        <Col lg=\"12\">\n                            <h5 className=\"text-center\">Copyright &copy; {new Date().getFullYear()}. <a href=\"http://github.com/AdamArthurFaizal\">{this.state.name}</a>. All Rights Reserved</h5>\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n        )\n    }\n}\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n        }\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 10);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick(){\n        this.setState({\n            date: new Date(),\n        });\n    }\n\n    render() {\n        return this.state.date.toLocaleTimeString();\n    }\n}\n\nclass AppRouter extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Switch>\n                    <Route path=\"/\" component={App} exact={true}/>\n                </Switch>\n            </React.Fragment>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    light: PropTypes.bool,\n    dark: PropTypes.bool,\n    fixed: PropTypes.string,\n    color: PropTypes.string,\n    role: PropTypes.string,\n    expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n    // pass in custom element to use\n}\n\nNavbarBrand.propTypes = {\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n    // pass in custom element to use\n}\n\nNavbarText.propTypes = {\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n    // pass in custom element to use\n}\n\nContainer.propTypes = {\n    fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n    // applies .container-fluid class if bool or .container-{breakpoint} if string\n}\n\nRow.propTypes = {\n    noGutters: PropTypes.bool,\n    // see https://reactstrap.github.io/components/form Form Grid with Form Row\n    form: PropTypes.bool,\n    xs: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    sm: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    md: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    lg: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    xl: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n}\n\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nconst columnProps = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.shape({\n        size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n        // example size values:\n        // 12 || \"12\" => col-12 or col-`width`-12\n        // auto => col-auto or col-`width`-auto\n        // true => col or col-`width`\n        order: stringOrNumberProp,\n        offset: stringOrNumberProp\n    })\n]);\n\nCol.propTypes = {\n    xs: columnProps,\n    sm: columnProps,\n    md: columnProps,\n    lg: columnProps,\n    xl: columnProps,\n    // override the predefined width (the ones above) with your own custom widths.\n    // see https://github.com/reactstrap/reactstrap/issues/297#issuecomment-273556116\n    widths: PropTypes.array,\n}\n\nAlert.propTypes = {\n    className: PropTypes.string,\n    closeClassName: PropTypes.string,\n    color: PropTypes.string, // default: 'success'\n    isOpen: PropTypes.bool,  // default: true\n    toggle: PropTypes.func,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    fade: PropTypes.bool, // default: true\n    // Controls the transition of the alert fading in and out\n    // See Fade for more details\n    transition: PropTypes.shape(Fade.propTypes),\n}\n\nJumbotron.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    fluid: PropTypes.bool,\n    className: PropTypes.string\n};\n\nModal.propTypes = {\n    // boolean to control the state of the popover\n    isOpen:  PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    // if modal should be centered vertically in viewport\n    centered: PropTypes.bool,\n    // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\n    size: PropTypes.string,\n    // callback for toggling isOpen in the controlling component\n    toggle:  PropTypes.func,\n    role: PropTypes.string, // defaults to \"dialog\"\n    // used to reference the ID of the title element in the modal\n    labelledBy: PropTypes.string,\n    keyboard: PropTypes.bool,\n    // control backdrop, see http://v4-alpha.getbootstrap.com/components/modal/#options\n    backdrop: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.oneOf(['static'])\n    ]),\n    // if body of modal should be scrollable when content is long\n    scrollable: PropTypes.bool,\n    // allows for a node/component to exist next to the modal (outside of it). Useful for external close buttons\n    // external: PropTypes.node,\n    // called on componentDidMount\n    onEnter: PropTypes.func,\n    // called on componentWillUnmount\n    onExit: PropTypes.func,\n    // called when done transitioning in\n    onOpened: PropTypes.func,\n    // called when done transitioning out\n    onClosed: PropTypes.func,\n    className: PropTypes.string,\n    wrapClassName: PropTypes.string,\n    modalClassName: PropTypes.string,\n    backdropClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    // boolean to control whether the fade transition occurs (default: true)\n    fade: PropTypes.bool,\n    cssModule: PropTypes.object,\n    // zIndex defaults to 1000.\n    zIndex: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    // backdropTransition - controls backdrop transition\n    // timeout is 150ms by default to match bootstrap\n    // see Fade for more details\n    backdropTransition: PropTypes.shape(Fade.propTypes),\n    // modalTransition - controls modal transition\n    // timeout is 300ms by default to match bootstrap\n    // see Fade for more details\n    modalTransition: PropTypes.shape(Fade.propTypes),\n    innerRef: PropTypes.object,\n    // if modal should be destructed/removed from DOM after closing\n    unmountOnClose: PropTypes.bool, // defaults to true\n    // if the element which triggered the modal to open should focused after the modal closes (see example somewhere below)\n    returnFocusAfterClose: PropTypes.bool // defaults to true\n}\n\nSpinner.propTypes = {\n    type: PropTypes.string, // default: 'border'\n    size: PropTypes.string,\n    color: PropTypes.string,\n    className: PropTypes.string,\n    cssModule: PropTypes.object,\n    children: PropTypes.string, // default: 'Loading...'\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Copyright (c) 2020. Adam Arthur Faizal.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './sass/style.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <AppRouter />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}